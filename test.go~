package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/gdamore/tcell/v2"
	"github.com/rivo/tview"
)

func main() {

	//	box := tview.NewBox().SetTitle("starting").SetBorder(true).SetTitleColor(tcell.Color126)
	app := tview.NewApplication()

	urlField := tview.NewInputField().
		SetLabel("URL: ").
		SetFieldWidth(50).
		SetDoneFunc(func(key tcell.Key) {

		})
	urlField2 := tview.NewInputField().
		SetLabel("URL: ").
		SetFieldWidth(50).
		SetDoneFunc(func(key tcell.Key) {

		})

	button := tview.NewButton("Hit Enter to close").SetSelectedFunc(func() {
		app.Stop()
	})

	button.Box.SetRect(0, 0, 10, 10)
	button.SetBorder(true)

	flex := tview.NewFlex().SetDirection(tview.FlexRow)
	flex.AddItem(urlField, 0, 1, true)
	flex.AddItem(urlField2, 0, 1, true)
	//	flex.AddItem(button, 0, 1, false)

	app.SetInputCapture(func(event *tcell.EventKey) *tcell.EventKey {

		if string(event.Name()) == "Tab" {
			app.SetFocus(urlField2)

		}
		return event
	})

	if err := app.SetRoot(flex, true).SetFocus(flex).Run(); err != nil {
		panic(err)
	}
	return

	fmt.Println("Enter url name")
	var url, contentType, method string
	var body string = ""
	fmt.Scanf("%s", &url)

	fmt.Println("Method :")
	fmt.Scanf("%s", &method)

	fmt.Println("Content-Type :")
	fmt.Scanf("%s", &contentType)

	if method == http.MethodPatch || method == http.MethodPut || method == http.MethodPost {

		fmt.Println("Body :")
		fmt.Scanf("%s", &body)
	}

	buff := bytes.NewBuffer([]byte(body))
	fmt.Println("body", body)
	req, err := http.NewRequest(method, url, buff)
	req.Header.Add("Content-Type", "application/json")
	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal("error in client", err)
	}

	defer resp.Body.Close()

	respBody, err := ioutil.ReadAll(resp.Body)

	if err != nil {
		log.Fatal("error parsing response", err)
	}
	fmt.Println(resp.StatusCode, string(respBody))
}
